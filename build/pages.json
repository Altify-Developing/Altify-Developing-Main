{
"home": {
	"title": "National bruh Gallery - <b>Simple Site</b> Example",
	"content": "<p>In addition to hosting software and files, as part of development projects, [GitHub|https://github.com] also provides the resources to host dedicated websites, to present and demonstrate ones work. This project has been developed to provide a, <b>relatively<\/b>, simple system for creating a standard set of these webpages, based on a small set of text files, formatted as [JSON|https://www.json.org] files. It was built to work along side a number of other GitHub projects, to provide a method of creating a set of consistent webpages, delivered using [GitHub Pages|https://pages.github.com].</p>\r\n\t<a href=\"https://github.com/jpadfield/simple-site\">\r\n\t\t<img style=\"position:relative;width:400px;\" class=\"rounded mx-auto d-block\" alt=\"Simple Site Graphic\" src=\"graphics/simple%20site%2001.png\">\r\n\t<\/a>\r\n<br/>\r\n<p>The content of the presented webpages are controlled with two main JSON files, augmented by optional additional files, stored in a local <b>build</b> folder.</p>\r\n<ul>\r\n\t<li>Various site wide details are defined within the [site.json|site.json.html] file.</li>\r\n\t<li>The content for the individual web-pages are defined within the [pages.json|pages.json.html] file. With the main pages being listed as tabs, and any sub-pages, or even sub-sub-pages etc, listed within drop-down menus from the related main page tab.</li>\r\n</ul>\r\n<p>The content added to these JSON files is automatically processed every time the files are edited and a new set of webpages will be created.<\/p>\r\n\r\n<div class=\"alert alert-info\" role=\"alert\">\r\n\t<h4 class=\"alert-heading\">Getting Started</h4>\r\n\t<p>[Join GitHub|https://github.com/join] &#8608; [Copy/Fork|https://help.github.com/en/github/getting-started-with-github/fork-a-repo] the repository &#8608; setup your [GitHub Action|https://help.github.com/en/actions] &#8608; Edit the JSON files &#8608; and Enjoy!<\/p>\r\n\t<p>For more information see the [Instructions|instructions.html] page, the [JSON|JSON.html] pages and browse the various examples provided.</p>\r\n</div>\r\n\r\n<div class=\"alert alert-info\" role=\"alert\">\r\n\t<h4 class=\"alert-heading\">New to GitHub</h4>\r\n\t<p>For those new to GitHub there is a lot of general documentation out there, such as [Github Guides|https://guides.github.com/] and [Getting Started with GitHub|https://help.github.com/en/github/getting-started-with-github], but one particular place to start might be the series of videos, [GitHub for Poets|https://www.youtube.com/playlist?list=PLRqwX-V7Uu6ZF9C0YMKuns9sLDzK6zoiV].</p>\r\n</div>",
	"content right": "",
	"displaycode": true	
	},
"site.json": {
		"parent": "json",
		"title": "Simple Site - The <b>site.json</b> file",
		"content": "<p>The <b>site.json<\/b> file is used to control a few of the more structural aspects of the web pages and relates to all of the pages that will be produced. It's content falls into three main parts: the meta, logos & links, and extras sections. The easiest method of creating your own <b>site.json<\/b> file is to copy the existing one that is provided with the project code and just edit it as needed. The sections shown below are cropped from a full file and contain descriptions rather than real values, for an example of real code please see this example [site.json|https:\/\/github.com\/jpadfield\/simple-site\/blob\/master\/build\/site.json] file.<\/p>\r\n\r\n<h4>The Meta values<\/h4>\r\n<p>'Meta elements are tags used in HTML and XHTML documents to provide structured metadata about a Web page'[@@For more details see: https:\/\/en.wikipedia.org\/wiki\/Meta_element]. They are used to defined a selection of hidden information which can be used by search engines and web browsers. At this time this project only makes use of 5 of these meta elements, further values could be added if required but this would require making adjustments to the project code rather than just the JSON file.<\/p>\r\n\r\n<figure>\r\n\t\t<pre style=\"overflow: hidden;border: 2px solid black;padding: 10px;\">\r\n<code>{\r\n  \"metaDescription\": \"Short project description, this can be used and presented by search engines\",\r\n  \"metaKeywords\": \"Used to help tag what your project is related to, this will assist search engines to find your project\",\r\n  \"metaAuthor\": \"Author Name|Author Email Address|Further Institutional Information as required\",\r\n  \"metaTitle\": \"Simple short title For Your website or project, which can be display in browser tabs\",\r\n  \"metaFavIcon\": \"URL for your chosen favicon.ico file (https:\/\/en.wikipedia.org\/wiki\/Favicon)\",\r\n...\r\n<\/code><\/pre>\r\n<\/figure>\r\n\r\n<h4>Logos & Links<\/h4>\r\n<p>As can be seen from the figure below the values in this section are reasonably straight forward and directly relate to the images and links that will appear on every page. These values are all optional and can be left blank, particularly the <b>extra_logos<\/b> details, but it is recommend that you do add an appropriate main logo and the required licence details.<\/p>\r\n\r\n<figure>\t\r\n<pre style=\"overflow: hidden;border: 2px solid black;padding: 10px;\">\r\n<code>...\r\n  \"logo_link\": \"The URL you would like the top left logo to point to a default would be \\\".\/\\\" which would point to the home page of your project.\",\r\n  \"licence\": \"Clickable links\/icons of indicating the relevant licence or re-use restrictions of your project\",\r\n  \"logo_path\": \"The full path or URL to the image you would like to appear in the top left corner\",\r\n  \"footer\": \"Optional copy right statement or link you would like to appear on the bottom left of the page \",\r\n  \"extra_logos\": {\r\n    \"1st Logo\": {\r\n      \"link\": \"The clickable link for this specific logo\",\r\n      \"logo\": \"The full path or URL for the required logo image file.\",\r\n      \"alt\": \"Optional first extra logo related to the project\"\r\n    },\r\n    \"2nd Logo\": {\r\n      \"link\": \"The clickable link for this specific logo\",\r\n      \"logo\": \"The full path or URL for the required logo image file.\",\r\n      \"alt\": \"Optional second extra logo related to the project\"\r\n    }\r\n  },\r\n...\r\n<\/code><\/pre>\r\n<\/figure>\r\n\r\n<div class=\"rounded mx-auto d-block\"><figure class=\"figure\"><img src=\"graphics\/site-json.png\" class=\"figure-img img-fluid rounded\" alt=\"site.json image\"><figcaption class=\"figure-caption\">Annotated image highlighting which sections of the page are connected to each of the Logos & Links values.<\/figcaption><\/figure><\/div>\r\n\r\n<h4>Extra JS & CSS Code<\/h4>\r\n<p>For most simple projects the last section of values can be simply left blank as they are only required if more advanced users would like to add additional functionality or styling.<\/p>\r\n\r\n<figure>\r\n<pre style=\"overflow: hidden;border: 2px solid black;padding: 10px;\">\r\n<code>...\r\n  \"extra_js_scripts\": [\"A comma separated list of any additional javascript files that need to be included\"],\r\n  \"extra_css_scripts\": [\"A comma separated list of any additional css style sheets that need to be included\"],\r\n  \"extra_css\": \"Any additional css code that you need to be directly added to all of the pages\",\r\n  \"extra_js\": \"Any additional javascript code that you need to be directly added to all of the pages\",\r\n...\r\n<\/code><\/pre><\/figure>\r\n\r\n<h4>Google Analytics<\/h4>\r\n<p>The inbuilt GitHub analytics system will track how people interact with your project files and code but it does not track visitors to your actual webpages. So if analytics are required for your webpages as well an option has been added to use <a href=\"https:\/\/analytics.google.com\/\">Google Analytics<\/a> simply by adding your site Google Analytics ID to your site.json file. Instructions for setting up Google Analytics and getting an Analytics ID can be found <a href=\"https:\/\/support.google.com\/analytics\/answer\/10269537?ref_topic=1009620#zippy=%2Cadd-the-global-site-tag-directly-to-your-web-pages\">here<\/a>.<\/p>\r\n\r\n<figure>\r\n<pre style=\"overflow: hidden;border: 2px solid black;padding: 10px;\">\r\n<code>...\r\n  \"GoogleAnalyticsID\": \"G-XXXXXXXXXX\"\r\n}\r\n<\/code><\/pre><\/figure>",
	"content right": "",
	"displaycode": true	
		},
	"pages.json": {
		"parent": "json",
		"title": "Simple Site - The <b>pages.json</b> file",
		"content": "<p><b>As noted on the main [JSON|JSON.html] page you will need to ensure that your pages.json file is valid JSON, please ensure all double quotes <i>in your added text<\/i> have a <i>&#47;<\/i> in front, like this <i>&#47;&#34;<\/i>, also please ensure that you text is all on one line, with no <i>newlines<\/i>.<\/b><\/p>\r\n\r\n<p>The <b>pages.json<\/b> file is used to define the actual content for your web pages. The file is made up of one or more page objects, an example of which is shown below. The meaning of these fields are relatively straightforward, as described below, though some additional notes are provided below, for an example of real code please see this example [pages.json|https:\/\/github.com\/jpadfield\/simple-site\/blob\/master\/build\/pages.json] file.<\/p>\r\n\r\n<figure>\r\n\t\t<pre style=\"overflow: hidden;border: 2px solid black;padding: 10px;\">\r\n<code>{\r\n\"<b>pageName<\/b>\": {\r\n  \"<b>title<\/b>\": \"Simple text title\",\r\n  \"<b>content<\/b>\": \"Main page content, this can be added as simple text of can include more complex html as required.\",\r\n  \"<b>content right<\/b>\": \"Optional second column of text if required.\",\r\n  \"<b>parent<\/b>\": \"Optional variable only used to indicate a relationship between a sub-page and a parent page - the pageName of the page, or sub-page above this one\",\r\n  \"<b>class<\/b>\": \"Optional variable only used for extension pages, normally leave blank or omit completely\",\r\n  \"<b>file<\/b>\": \"Optional variable only used for extension pages, normally leave blank or omit completely\",\r\n  \"<b>aliases<\/b>\": \"Optional comma separated list of other names for this page. This can be used to ensure consistency of old links. If the page names need to be changed the old names can be listed here and special stub pages will be created to redirect old URLs to the new page names.\",\r\n  \"<b>displayName<\/b>\": \"Optional- Can be used to substitute a more display friendly name for a given page in all links and dropdowns, for example one could use 'Some great examples' as the displayName for a page simply called 'examples'.\",\r\n  \"<b>displaycode<\/b>\": \"Optional - true or false (default) value - this option is used for documentation purposes to include the JSON code used to create a page at the bottom of the page.\"  \r\n  },\r\n\"<b>AnotherPageName<\/b>\": {\r\n  \"<b>title<\/b>\": \"Another simple text title\",\r\n  \"<b>content<\/b>\": \"Unique page content, this will be different for each page.\",\r\n  \"<b>content right<\/b>\": \"\"\r\n  }\r\n}\r\n<\/code><\/pre><figcaption class=\"figure-caption\">Simplified example of two page objects, with the variable names highlighted in bold.<\/figcaption>\r\n<\/figure>\r\n<p>Each of the values within an object can include simple text information or more complex html, however you must ensure that you follow guidelines included of the main [JSON|JSON.html] page. The parent field allows you to nest pages under other pages, starting with one of the main pages, but you can then nest sub-sub-pages under sub-pages and so on if really required.<\/p>\r\n\r\n<p>The <b>parent<\/b> field allows you to nest pages under other pages, starting with one of the main pages, but you can then nest sub-sub-pages under sub-pages and so on if really required. The <b>class<\/b> and <b>file<\/b> fields are only used for extensions to the simple-site system and more information can be found [here|extensions.html].<\/p>\r\n\r\n<p>In addition to standard html coding some additional options have been added to make life easier. These do not need to be used if not needed.<\/p>\r\n<ul>\r\n\t<li><b>Adding footnotes<\/b>: Locate footnotes references in your text using <b>&#91;&#64;&#64;Followed by the text of the actual footnote&#93;<\/b>, see the example below. These will all be automatically processed so that all of the footnotes added to the <b>content<\/b> or <b>content right<\/b> are numbered correctly and clickable.<\/li>\r\n\t<li>Adding links: Links can be added to any word or phrase simply by enclosing them in square brackets, separated with a pipe character: <b>&#91;Display text|https:\/\/full.url.com&#93;<\/b><\/li>\r\n<\/ul>\r\n\r\n<h3>Breadcrumb navigation for sub-pages<\/h3>\r\n\r\n<p>Sub-pages are not given there own tabs, as the main pages are, they are nested in dropdown menus below their parent main page. To make it easier to navigate back up a series of nested sub pages an additional [breadcrumb navigation bar|https:\/\/en.wikipedia.org\/wiki\/Breadcrumb_navigation] is automatically added to all sub-pages, as shown below.<\/p>\r\n\r\n<figure class=\"figure\"><img src=\"graphics\/breadcrumb-example.png\" class=\"figure-img img-fluid rounded\" alt=\"An example of the extra breadcrumb navigation used within sub-pages.\"><figcaption class=\"figure-caption\">An example of the extra breadcrumb navigation used within sub-pages.<\/figcaption><\/figure>\r\n\r\n<h3>Included pages navigation for sub-pages<\/h3>\r\n\r\n<p>Also to help navigation to nested sub pages an additional list of links in a <b>Include Pages<\/b> is automatically added for all sub-pages, as shown below.<\/p>\r\n\r\n<figure class=\"figure\"><img src=\"graphics\/children-example.png\" class=\"figure-img img-fluid rounded\" alt=\"An example of the extra navigation links provided to access any related sub-pages.\"><figcaption class=\"figure-caption\">An example of the extra navigation links provided to access any related sub-pages.<\/figcaption><\/figure>\r\n\r\n<h3>Example page objects<\/h3>\r\n<p>This page object was used to define the content of the [Example|example.html], one of the actual pages within this demonstration site.<\/p>\r\n\r\n<figure>\r\n\t\t<pre style=\"overflow: hidden;border: 2px solid black;padding: 10px;\">\r\n<code>{\r\n\"example\": {\r\n  \"title\": \"Simple Site Example\",\r\n  \"content\": \"&lt;h3&gt;An additional local title can be added&lt;\/h3&gt;&lt;br\/&gt;&lt;p&gt;This is an example of a small set of related html pages created automatically based on a set of three JSON&#91;&#64;&#64;https:\/\/www.json.org&#93; files. This example includes simple text, some basic html code and even some additional Bootstrap options. Please note you can simply just use text, the more complex options are just here as an example.&lt;\/p&gt;&lt;div style=\\\"text-align:center;\\\"&gt;&lt;a class=\\\"btn btn-outline-primary nav-button\\\" style=\\\"left:80px;\\\" id=\\\"nav-models\\\" role=\\\"button\\\" href=\\\".\/\\\"&gt;Example Button&lt;\/a&gt;&lt;\/div&gt;&lt;br\/&gt;&lt;p&gt;Button or images or any html markup can be added in to form the bulk of the content&#91;&#64;&#64;Here we can place a lot more detail about this issue&#93; and then presented as a simple html page on Github&#91;&#64;&#64;https:\/\/github.com\/&#93;&lt;\/p&gt;&lt;div class=\\\"alert alert-info\\\" role=\\\"alert\\\"&gt;&lt;h4&gt;For the adventurous you can also use other &#91;Bootstrap|https:\/\/getbootstrap.com\/&#93; functions&lt;\/h4&gt;&lt;p&gt;Extra Bootstrap classes can be used to add colours and emphasis as required.&lt;\/p&gt;&lt;\/div&gt;\",\r\n  content right\": \"&lt;p&gt;Additional information &#91;&#64;&#64;This extra foot note should be automatically positioned under the second column&#93; easily be added as a second column without the need for more complex html and even add in an image if required:&lt;\/p&gt;&lt;figure class=\\\"figure\\\"&gt;&lt;img src=\\\"https:\/\/media.ng-london.org.uk\/iiif\/009-01DZ-0000\/full\/512,\/0\/default.jpg\\\" class=\\\"figure-img img-fluid rounded\\\" alt=\\\"Hans Holbein the Younger, Jean de Dinteville and Georges de Selve ('The Ambassadors').\\\"&gt;&lt;figcaption class=\\\"figure-caption\\\"&gt;Hans Holbein the Younger, Jean de Dinteville and Georges de Selve ('The Ambassadors') \\u00a9 The National Gallery, London. Bought, 1890. This image is licensed under &#91;CC-BY-NC-ND 4.0|https:\/\/creativecommons.org\/licenses\/by-nc-nd\/4.0\/&#93;.&lt;\/figcaption&gt;&lt;\/figure&gt;\"\r\n  }\r\n}\r\n<\/code><\/pre>\r\n<\/figure>\r\n\r\n<p>This second page object was used to define the content of the [example subpages|example-subpage-01.html], one of the actual pages within this demonstration site.<\/p>\r\n\r\n<figure>\r\n\t\t<pre style=\"overflow: hidden;border: 2px solid black;padding: 10px;\">\r\n<code>{\r\n&quot;example-subpage-01&quot;: {\r\n  &quot;parent&quot;: &quot;example&quot;,\r\n  &quot;title&quot;: &quot;More detail might be needed in some areas&quot;,\r\n  &quot;content&quot;: &quot;&lt;p&gt;Sub pages can be set up to provide additional content without adding to the list of tabs at the top of the page. These are nested using a simple parent child relationship.&lt;\/p&gt;&quot;,\r\n  &quot;content right&quot;: &quot;&lt;img style=\\&quot;position:relative;width:100%;\\&quot; src=\\&quot;graphics\/example_knowledge_graph.png\\&quot;\/&gt;&quot;\r\n  }\r\n}\r\n<\/code><\/pre>\r\n<\/figure>",
	"content right": "",
	"displaycode": true	
		},
	"lists": {
		"parent": "extensions",
		"displayName": "Galleries and Lists",
		"aliases": "Galleries and Lists",
		"class": "list",
		"file": "list-example.json",
		"title": "Simple Site - The <b>List and Gallery Extension</b>",
		"content": "<p>This extension has been setup to automate the process of creating formatted lists and galleries using [Bootstrap|https:\/\/getbootstrap.com\/]. It is an example of a special page that can be added to the [pages.json|pages.json.html] file.<\/p>\r\n\r\n<h3>The Example<\/h3><p>This example is displaying a list of four entries, displayed four times, demonstrating all four available display formats. An optional table of contents providing links to each of the defined groups has also been included.<\/p>\r\n[##]\r\n\r\n<h3>Summary<\/h3>\r\n\r\n<div class=\"alert alert-info\" role=\"alert\"><h4 class=\"alert-heading\">Extension Variables<\/h4><p>For this extension to work the <b>class<\/b> variable needs to be set to <b>list<\/b> and the <b>file<\/b> variable needs to give the name of the additional json file including the list data as shown below.<\/p><\/div>\r\n\r\n<figure>\r\n<pre style=\"overflow: hidden;border: 2px solid black;padding: 10px;\">\r\n<code>\r\n...  \r\n  \"<b>List - Gallery Example<\/b>\": {\r\n    \"<b>parent<\/b>\": \"extensions\",\r\n    \"<b>class<\/b>\": \"list\",\r\n    \"<b>file<\/b>\": \"list-example.json\",\r\n    \"<b>title<\/b>\": \"Simple Site - The &lt;b&gt;List Extension Gallery of Supporters&lt;\/b&gt;\",\r\n    \"<b>content<\/b>\": \"&lt;p&gt;This extension has been setup to automate the process of creating formatted lists and galleries using &#91;Bootstrap|https:\/\/getbootstrap.com\/&#93;. It is an example of a special page that can be added to the ... \",\r\n    \"<b>content right<\/b>\": \"\"\r\n  },\r\n...\r\n<\/code>\r\n\t<\/pre>\r\n\t<figcaption class=\"figure-caption\">Simplified version of the JSON object used to describe this page.<\/figcaption>\r\n<\/figure>\r\n\r\n<p>The details included in the <b>content<\/b> and <b>content right<\/b> variable will be presented as [previously described|pages.json.html], however the data included in the named file, in this case <b>timeline.json<\/b> will be processed to add a formatted timeline to the page.<\/p>\r\n\r\n<h3>List JSON file<\/h3>\r\n\r\n<p>As with the other JSON files the list data needs to be organised in a series of JSON objects, these are documented below, but for an example of a fully formatted JSON file please see the [list-example.json|https:\/\/github.com\/jpadfield\/simple-site\/blob\/master\/build\/list-example.json] file.<\/p>\r\n\r\n<figure>\r\n<pre style=\"overflow: hidden;border: 2px solid black;padding: 10px;\">\r\n<code>{\r\n  \"<b>defaultcard<\/b>\": \"<b>list<\/b>, <b>full<\/b>, <b>simple<\/b>, <b>presentation<\/b> or <b>image<\/b> - selected default formatting used for each of the included list entries\",\r\n  \"<b>displaychecked<\/b>\": \"<b>true<\/b> or <b>false<\/b> - option to display dates of when included or listed links where last checked.\",\r\n  \"<b>tableofcontents<\/b>\": \"<b>true<\/b> or <b>false<\/b> - option to include a table of contents\",\r\n  \"<b>groups\"<\/b>: \"<b>{}<\/b>\" - optional array of extra variables to define alternative formatting and to include a comment for each defined group of list entries, see below.\",\r\n...\r\n<\/code><\/pre><figcaption class=\"figure-caption\">The top four variables required in the list JSON file.<\/figcaption>\r\n<\/figure>\r\n\r\n<figure>\r\n<pre style=\"overflow: hidden;border: 2px solid black;padding: 10px;\">\r\n<code>{\r\n...\r\n  \"group name\" : {\r\n    \"<b>comment<\/b>\": \"Optional comment or summary used to describe all of the list items in a given group.\",\r\n    \"<b>card<\/b>\": \"<b>list<\/b>, <b>full<\/b>, <b>simple<\/b> or <b>image<\/b> - selected formatting to be used for this specific group of list entries.\"\r\n    \"<b>maxcols<\/b>\": \"Optional number from 1 - 12 to indicate the maximum number of columns to allow for simple cards and image cards. The default value is 3.\"\r\n    },\r\n...\r\n<\/code><\/pre><figcaption class=\"figure-caption\">An example of the optional variables that can be used to further define individual groups of list entries.<\/figcaption>\r\n<\/figure>\r\n\r\n<p>The rest of the data within the JSON file relates to a series of entries organised as a <b>list<\/b>, it is ok just to have a single item in the list.<\/p>\r\n\r\n<p>List entries ....<\/p>\r\n\r\n<figure>\r\n\r\n<pre style=\"overflow: hidden;border: 2px solid black;padding: 10px;\">\r\n<code>\r\n... \r\n\"list\": [\r\n  {\r\n  \"groups\": [\"Group Name 1\", \"Group Name 2\"], - \"comma separated list of groups this particular list entry should be display in - normally just a single entry\"\r\n  \"ptitle\": \"Primary entry title\",\r\n  \"stitle\": \"Optional secondary title\",\r\n  \"comment\": \"Optional comment or summary used to describe this particular list entry\",\r\n  \"image\": \"Optional file path for image\", \"this can be a full public URL or a local link to an image uploaded into the local <b>graphics<\/b> folder within your GitHub repository\",\r\n  \"link\": \"Optional html link to further information or details related to this list entry\",\r\n  \"checked\": \"Optional date to define when the provided link was last checked - list format only\",\r\n  \"video\": \"Optional - YouTube link or file path pointing to the recording of a given presentation - presentation format only\",\r\n  \"slides\": \"Optional - link or file path pointing to the pdf of the slides used in a given presentation - presentation format only\",\r\n  \"transcript\": \"Optional - link or file path pointing to the text file of the transcription of the relevant video of a given presentation - presentation format only\",\r\n},\r\n...\r\n<\/code><\/pre><figcaption class=\"figure-caption\">The required and optional variables used to define each list entry.<\/figcaption>\r\n<\/figure>",
		"content right": "",
		"displaycode": true		
	},
	"mirador-viewer": {
		"parent": "extensions",
		"displayName": "Mirador IIIF viewer",
		"aliases": "Mirador IIIF viewer",
		"class": "mirador",
		"file": "mirador.json",
		"title": "Simple Site - The <b>IIIF Mirador Extension</b>",
		"content": "<p>This extension uses the [IIIF|https:\/\/iiif.io] image viewer [Mirador|https:\/\/projectmirador.org\/] to produce a customised presentation of a bespoke selection of IIIF manifests[@@IIIF manifests are simply a structured list of web based images resources that can be viewed in a IIIF compliant viewer, for more details see https:\/\/iiif.io\/api\/presentation\/2.1\/#table-of-contents]. It is an example of a special page that can be added to the [pages.json|pages.json.html] file.<\/p>\r\n\r\n<h3>The Example<\/h3>\r\n[##]\r\n<br\/>\r\n<h3>Summary<\/h3>\r\n<div class=\"alert alert-info\" role=\"alert\"><h4 class=\"alert-heading\">Extension Variables<\/h4><p>For this extension to work the <b>class<\/b> variable needs to be set to <b>mirador<\/b> and the <b>file<\/b> variable needs to give the name of the additional json file including the IIIF manifest list data as shown below.<\/p><\/div>\r\n\r\n<figure>\r\n\t\t<pre style=\"overflow: hidden;border: 2px solid black;padding: 10px;\">\r\n<code>...  \r\n  \"<b>mirador<\/b>\": {\r\n    \"<b>parent<\/b>\": \"extensions\",\r\n    \"<b>class<\/b>\": \"mirador\",\r\n    \"<b>file<\/b>\": \"mirador.json\",\r\n    \"<b>title<\/b>\": \"Simple Site - The &lt;b&gt;IIIF Mirador Extension&lt;\/b&gt;\",\r\n    \"<b>content<\/b>\": \"&lt;p&gt;This extension uses the &#91;IIIF|https:\/\/iiif.io&#93; to produce a customised presentation of a bespoke selection of &#91;IIIF manifests ... \",\r\n    \"<b>content right<\/b>\": \"\"\t\t\r\n  }\r\n...\r\n<\/code><\/pre><figcaption class=\"figure-caption\">Simplified version of the JSON object used to describe this page.<\/figcaption>\r\n<\/figure>\r\n\r\n<p>The details included in the <b>content<\/b> and <b>content right<\/b> variable will be presented as [previously described|pages.json.html], however the data included in the named file, in this case <b>mirador.json<\/b> will be processed to add a populated Mirador image viewer to the page.<\/p>\r\n\r\n<h3>Mirador JSON file<\/h3>\r\n\r\n<p>As with the other JSON files the mirador data needs to be organised in a series of JSON objects, an example of which is provided below, for an example of real code please see the [mirador.json|https:\/\/github.com\/jpadfield\/simple-site\/blob\/master\/build\/mirador.json] file. The expected data can be split into two parts, the first is required and the second, more complex section is optional.<\/p>\r\n\r\n<h4>Section one - <b>catalog<\/b> object<\/h4>\r\n\r\n<p>This object is composed of a simple list of manifests URIs that should be preloaded into the viewer. If only the catalog object is provided Mirador is setup to autoload in the first image of the first manifest listed.<\/p>\r\n<figure>\r\n\t\t<pre style=\"overflow: hidden;border: 2px solid black;padding: 10px;\">\r\n<code>...\r\n  \"<b>catalog<\/b>\": [\r\n    { \"manifestId\": \"<b>https:\/\/web.address\/of\/a\/manifest you want to include\"<\/b> }, \r\n    { \"manifestId\": \"<b>https:\/\/you.can.include\/a\/number\/of\/manifests\/as\/required<\/b>\" }\r\n    ]\r\n...\r\n<\/code><\/pre><figcaption class=\"figure-caption\">A commented example of a catalog object with two manifests listed.<\/figcaption>\r\n<\/figure>\r\n<br\/>\r\n<h4>Section two - the <b>windows<\/b> object<\/h4>\r\n<p>As noted above this section is optional, it can also be a bit more complex. This object id intended to allow users to make use of some of the standard Mirador options to define which manifests and images are automatically loaded into the viewer and how they are arranged.<\/p>\r\n<figure>\r\n\t\t<pre style=\"overflow: hidden;border: 2px solid black;padding: 10px;\">\r\n<code>...\r\n  \"<b>windows<\/b>\": [\r\n    {\r\n    \"<b>manifestId<\/b>\": \"URI of the manifest, from the included list, that you would like to load into a given slot by default\",\r\n    \"<b>canvasIndex<\/b>\":\"The number, starting from 0, of the image, as listed in the manifest, to be loaded in first\",\r\n    \"<b>view<\/b>\": \"The optional variable to define the initial view of this slot, enter one of <b>single<\/b>(default) or <b>gallery<\/b>\",\r\n    \"<b>id<\/b>: \"Option variable to define a unique id for this slot, can be used in conjunction with more complex options to define the order and position in which listed slots will appear.\"\r\n    }\r\n  ]\r\n...\r\n<\/code><\/pre><figcaption class=\"figure-caption\">A commented version of a windows object with a single slot defined. More information about these various values can be found on the main [Mirador webpage|https:\/\/github.com\/ProjectMirador\/mirador\/wiki\/Configuration-Guides].<\/figcaption>\r\n<\/figure>\r\n<br\/>\r\n<h3>Mirador Text file<\/h3>\r\n\r\n<p>Although the JSON format described above is preferred and provides additional functions, in order to make this extension as simple an accessible as possible, it is also possible to provide details of required manifests as simple text list, with one manifest per line.<\/p>\r\n\r\n<figure>\r\n\t\t<pre style=\"overflow: hidden;border: 2px solid black;padding: 10px;\">\r\n<code>https:\/\/manifests.britishart.yale.edu\/manifest\/34\r\nhttps:\/\/iiif.harvardartmuseums.org\/manifests\/object\/299843\r\nhttps:\/\/media.nga.gov\/public\/manifests\/nga_highlights.json\r\n<\/code><\/pre><figcaption class=\"figure-caption\">An example of the simplest way of passing manifests to simple-site page builder, a simple list of manifest urls saved as a text file with one manifest url per line.<\/figcaption>\r\n<\/figure>",
		"content right": "",
		"displaycode": true		
	},
	"panel-truck-viewer": {
		"parent": "extensions",
		"displayName": "Panel Truck Viewer",
		"aliases": "Panel Truck viewer",
		"class": "paneltruck",
		"file": "https://gist.githubusercontent.com/garrettdashnelson/73b32f40cccbe30239838dd3bd63988a/raw/7d4f7efc52ee0bb0929110a4438c37d8c98f0aa5/test-screenplay.json",
		"title": "Simple Site - The <b>Panel-Truck (IIIF) Extension</b>",
		"content": "<p>This extension makes use of [IIIF|https:\/\/iiif.io] and the [panel-truck (v0.1)|https:\/\/geoservices.leventhalmap.org\/cartinal\/documentation\/panel-truck.html] viewer, created by the <a href=\"https:\/\/leventhalmap.org\">Leventhal Map and Education Center<\/a> at the Boston Public Library. The panel-truck viewer is a web UI tool which allows users to present interactive storylines using images and maps. It is an example of a special page that can be added to the [pages.json|pages.json.html] file.<\/p>\r\n\r\n<h3>The Example<\/h3>\r\n[##]\r\n<br\/>\r\n<h3>Summary<\/h3>\r\n<div class=\"alert alert-info\" role=\"alert\"><h4 class=\"alert-heading\">Extension Variables<\/h4><p>For this extension to work the <b>class<\/b> variable needs to be set to <b>paneltruck<\/b> and the <b>file<\/b> variable needs to give the name of the additional json file including the panel-truck script details as shown below.<\/p><\/div>\r\n\r\n<p>The details included in the <b>content<\/b> and <b>content right<\/b> variable will be presented as [previously described|pages.json.html], however the data included in the named file, in this case <b>test-screenplay.json<\/b> will be processed and displayed in the panel-truck viewer.<\/p>\r\n\r\n<h3>Panel Truck  JSON file<\/h3>\r\n\r\n<p>As with the other JSON files the panel-truck data needs to be organised in a series of JSON objects, an example of which is provided below, for a live presentation of the example of code please see the [test-screenplay.json|https:\/\/gist.githubusercontent.com\/garrettdashnelson\/73b32f40cccbe30239838dd3bd63988a\/raw\/7d4f7efc52ee0bb0929110a4438c37d8c98f0aa5\/test-screenplay.json] file.<\/p>\r\n\r\n<p>The required and optional json variables have all been described as part of the standard [panel-truck documentation|https:\/\/geoservices.leventhalmap.org\/cartinal\/documentation\/panel-truck.html#creating-a-screenplay], but for any more information please [get in touch|https:\/\/www.leventhalmap.org\/about\/people\/garrett-nelson\/] with the original project.<\/p>",
		"content right": "",
		"displaycode": true		
	},
	"curtain-viewer": {
		"parent": "extensions",
		"displayName": "Curtain Viewer",
		"aliases": "Curtain Viewer",
		"class": "curtain",
		"file": "https://raw.githubusercontent.com/jpadfield/simple-site/master/build/curtain-example-01.json",
		"title": "<b>Curtain Viewer</b> - <i>A Dominican, with the Attributes of Saint Peter Martyr</i>",
		"content": "<p>This extension makes use of [IIIF|https:\/\/iiif.io] and the [Victoria and Albert Museum|https:\/\/www.vam.ac.uk\/] - [Curtain Viewer|https:\/\/vanda.github.io\/curtain-viewer] which is based on [OpenSeaDragon|https:\/\/openseadragon.github.io\/], using the [curtain-sync plugin|https:\/\/github.com\/cuberis\/openseadragon-curtain-sync] for comparing naturally aligned image variants, such as those obtained by multi-spectral imaging, supplied as canvases in a IIIF manifest.<\/p>\r\n\r\n<p>The images presented here are all representations of [A Dominican, with the Attributes of Saint Peter Martyr about 1490-1500|https:\/\/www.nationalgallery.org.uk\/paintings\/giovanni-bellini-a-dominican-with-the-attributes-of-saint-peter-martyr] by [Giovanni Bellini|http:\/\/www.nationalgallery.org.uk\/artists\/giovanni-bellini] which was presented as part of the [Close Examination: Fakes, Mistakes and Discoveries|https:\/\/www.nationalgallery.org.uk\/exhibitions\/past\/close-examination-fakes-mistakes-and-discoveries] exhibition and is described in more detail [here|http:\/\/www.nationalgallery.org.uk\/paintings\/research\/a-dominican-with-the-attributes-of-saint-peter-martyr].<\/p>\r\n\r\n<p><b>This viewer is limited to displaying three images at a time, but one can select any three from the set provided.<\/b><\/p>\r\n\r\n<h3>The Example<\/h3>\r\n[##]\r\n<br\/>\r\n<h3>Summary<\/h3>\r\n<div class=\"alert alert-info\" role=\"alert\"><h4 class=\"alert-heading\">Extension Variables<\/h4><p>For this extension to work the <b>class<\/b> variable needs to be set to <b>curtain<\/b> and the <b>file<\/b> variable needs to give the name of the additional json file including the IIIF collection manifest defining the set of images to present, as shown below.<\/p><\/div>\r\n\r\n<p>The details included in the <b>content<\/b> and <b>content right<\/b> variable will be presented as [previously described|pages.json.html], however the data included in the named file, in this case <b>curtain-example-01.json<\/b> will be processed and displayed in the curtain viewer. <b>Please note that a full resolvable URL is required for this file rather than just the local filename<\/b>.<\/p>\r\n\r\n<h3>Curtain Viewer IIIF Collection Manifest JSON file<\/h3>\r\n\r\n<p>As with the other JSON files the curtain viewer data needs to be organised in a series of JSON objects, an example of which is provided below, for a live presentation of the example of code please see the [curtain-example-01.json|https:\/\/raw.githubusercontent.com\/jpadfield\/simple-site\/master\/build\/curtain-example-01.json] file.<\/p>\r\n\r\n<p>More general details of the variables and formatting required for the version of the IIIF Collection manifest used in the curtain viewer can found [here|https:\/\/iiif.io\/api\/presentation\/2.1\/#collection].<\/p>",
		"content right": "",
		"displaycode": true
	},
	"openseadragon-viewer": {
		"parent": "extensions",
		"displayName": "OpenSeadragon Viewer",
		"aliases": "OpenSeadragon Viewer",
		"class": "openseadragon",
		"file": "openseadragon_list.txt",
		"title": "Simple Site - The <b>OpenSeadragonViewer (IIIF) Extension</b><i></i>",
		"content": "<p>This extension creates an [OpenSeaDragon|https:\/\/openseadragon.github.io\/] viewer based on [IIIF|https:\/\/iiif.io] resources, either images[@@For more information about how direct image URLs are constructed see:https:\/\/iiif.io\/api\/image\/3.0\/#51-image-information-request] or manifests[@@IIIF manifests are simply a structured list of web based images resources that can be viewed in a IIIF compliant viewer, for more details see https:\/\/iiif.io\/api\/presentation\/3.0\/#52-manifest]. It is an example of a special page that can be added to the [pages.json|pages.json.html] file.<\/p>\r\n\r\n<h3>The Example<\/h3>\r\n[##]\r\n<br\/>\r\n<h3>Summary<\/h3>\r\n<div class=\"alert alert-info\" role=\"alert\"><h4 class=\"alert-heading\">Extension Variables<\/h4><p>For this extension to work the <b>class<\/b> variable needs to be set to <b>openseadragon<\/b> and the <b>file<\/b> variable needs to be a URL to a live IIIF mainifest or the path to a simple text list of either IIIF manifests or individual <b>info.json<\/b> URLs for IIIF images, as shown below.<\/p><\/div>\r\n\r\n<p>The details included in the <b>content<\/b> and <b>content right<\/b> variable will be presented as [previously described|pages.json.html], however the data included in the named file, in this case <b>openseadragon_list.txt<\/b> will be processed and displayed in the openseadragon viewer. <b>Please note that a full resolvable URL is required when a single IIIF manifest is used, but a simple filename can be used to reference a local file<\/b>.<\/p>",
		"content right": "",
		"displaycode": true
	},
	"template-home": {
		"displayName": "Example Home",
		"parent": "template",
		"title": "YOUR PAGE TILE APPEARS HERE",
		"class": "openseadragon",
		"file": "https://data.ng-london.org.uk/0CWR-0001-0000-0000.iiif",
		"content": "<h4>SECTION TITLE CAN BE ADDED LIKE THIS</h4><br/><p>This is an example of a small set of related html pages created automatically based on a set of three JSON[@@https://www.json.org] files. This example includes simple text, some basic html code and even some additional Bootstrap options. Please note you can simply just use text, the more complex options are just here as an example.</p><div style=\"text-align:center;\"><a class=\"btn btn-outline-primary nav-button\" style=\"left:80px;\" id=\"nav-models\" role=\"button\" href=\"./\">Example Button</a></div><br/><p>Button or images or any html markup can be added in to form the bulk of the content[@@Here we could place a lot more detail about this issue] and then presented as a simple html page on Github[@@https://github.com/]</p><div class=\"alert alert-info\" role=\"alert\"><h4>For the adventurous you can also use other [Bootstrap|https://getbootstrap.com/] functions</h4><p>Extra Bootstrap classes can be used to add colours and emphasis as required.</p></div><p>N.B. The logos used on this page and the link to the Github repository above can all be modified. See [site.json|site.json.html] in the Documentation section for further details.</p><p>Additional information[@@This extra foot note should be automatically positioned under the second column] can be easily added as a second column without the need for more complex html and one can even add in an image if required:</p><h4>Images</h4><p>TO ADD AN IMAGE TO A PAGE THERE ARE TWO OPTIONS:</p>",
		"content right": "<p><b>To insert a static image:</b></p><p>Replace the URL in the centre of this code and update the alternative text and caption (if either is desired): <figure class=\"figure\"><img src=\"https://data.ng-london.org.uk/iiif/image/02NS-0001-0000-0000/full/256,/0/default.jpg\" class=\"figure-img img-fluid rounded\" alt=\"This is where you can add the alternative text for the image\"><figcaption class=\"figure-caption\">There is also the option to add a caption to any image. - Georges Seurat ('Bathers at Asnières') \u00a9 The National Gallery, London. Bought, Courtauld Fund, 1924. This image is licensed under [CC-BY-NC-ND 4.0|https://creativecommons.org/licenses/by-nc-nd/4.0/].</figcaption></figure><p><b>To insert a 'zoom-able' image:</b></p> <p> First, you need a IIIF manifest. Ensure you have <b>\"class\":\"openseadragon\"</b> and <b>\"file\":\"IIIF manifest goes here\"</b> enabled on the page on which you'd like to display the image.</p><p>Given the above conditions you can use this code, amended as you'd like to display the desired image: <figure class=\"figure\">[##]<figcaption style=\"padding-left:16px;padding-right:16px;\" class=\"figure-caption\">Hans Holbein the Younger, Jean de Dinteville and Georges de Selve ('The Ambassadors') \u00a9 The National Gallery, London. Bought, 1890. This image is licensed under [CC-BY-NC-ND 4.0|https://creativecommons.org/licenses/by-nc-nd/4.0/].</figcaption></figure>",
		"displaycode": true	
		},
	"example-subpage-01": {
		"parent": "template-home",
		"displayName": "Nice display pagename",
		"title": "More detail might be needed in some areas",
		"content": "<p>Sub pages can be set up to provide additional content without adding to the list of tabs at the top of the page. These are nested using a simple parent child relationship.</p><div class=\"alert alert-warning\" role=\"alert\"><p><b>NB:</b> The display name of a page, which appears in the menus and navigation options can be different to the actual name used for the page. For example the display name of this page is <b>Nice display pagename</b>, whereas the actual page name in the URL is <b>example-subpage-01</b>. This can be useful as it is good practice to avoid long page names that include spaces.</p><p>Display names can be set in the [pages.json|pages.json.html] file, using the variable <b>\"displayName\"</b>.</p></div>",
	  "content right": "<img style=\"position:relative;width:100%;\" alt=\"Example Knowledge Graph\" src=\"graphics/example_knowledge_graph.png\"/>",
    "displaycode": true
		},
	"mirador-example": {
    "parent": "template-home",
    "displayName": "A Mirador Viewer",
    "class": "mirador",
    "file": "mirador.json",
    "title": "Simple Site - The <b>IIIF Mirador Extension</b>",
    "content": "<p>This extension uses the [IIIF|https://iiif.io] image viewer [Mirador|https://projectmirador.org/] to produce a customised presentation of a bespoke selection of IIIF manifests[@@IIIF manifests are simply a structured list of web based images resources that can be viewed in a IIIF compliant viewer, for more details see https://iiif.io/api/presentation/2.1/#table-of-contents]. It is an example of a special page that can be added to the [pages.json|pages.json.html] file. To change the objects displayed in this viewer, modify the <b>mirador.json</b> file found in the <b>build</b> folder in your Github Repository. Further information on the function of the viewer can be found under [Extensions|mirador-viewer.html] in the Documentation section of this site.</p>\r\n\r\n<h3>The Example</h3>\r\n[##]",
    "content right": "",
    "displaycode": true
		},
	"example-subpage-02": {
		"parent": "template-home",
		"displayName": "An Example List",
		"class": "list",
		"file": "list-example.json",
		"title": "Another example of a simple sub page",
		"content": "<p>This example is displaying a list of four entries, displayed four times, demonstrating all four available display formats. An optional table of contents providing links to each of the defined groups has also been included.</p><p>It is an example of a special page that can be added to the [pages.json|pages.json.html] file. To change the objects displayed in this list, modify the <b>list-example.json</b> file found in the <b>build</b> folder in your Github Repository. Further information on types and formats of the lists displayed can be found under [Extensions|lists.html] in the Documentation section of this site.</p>\r\n\r\n[##]",		
	  "content right": "",
    "displaycode": true
		},
	"example-sub-subpage-01": {
		"parent": "example-subpage-01",
		"aliases": "results",
		"displayName": "Great webpage name",
		"title": "Probably not needed - more nesting",
		"content": "<p>As the relationships work on a simple parent child structure more and more pages can be nested as required.</p>",
		"content right": "<p>This example also shows that if needed you can automatically have multiple page names point towards the same page. This can be important if you have an old page name that needed to be changed, but has been referenced in the past.<div style=\"text-align:center;\"><a class=\"btn btn-outline-primary nav-button\" style=\"left:80px;\" id=\"nav-models\" role=\"button\" href=\"results.html\">The same page, but with the name \"results.html\"</a></div><br/><div class=\"alert alert-warning\" role=\"alert\"><p>Alternative page names can be set in the [pages.json|pages.json.html] file, using the variable <b>\"aliases\"</b>, and multiple alternative names can be entered as a comma separated list.</p></div>",
    "displaycode": true
		}
}
